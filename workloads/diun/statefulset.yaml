apiVersion: apps/v1
kind: StatefulSet

metadata:
  name: diun
  namespace: diun
  labels:
    app.kubernetes.io/name: diun
    app.kubernetes.io/part-of: diun
    app.kubernetes.io/version: 4.21.0

spec:
  replicas: 1
  revisionHistoryLimit: 5

  selector:
    matchLabels:
      app.kubernetes.io/name: diun
      app.kubernetes.io/part-of: diun

  template:
    metadata:
      annotations:
        diun.enable: "true"
        diun.regopt: docker.io
        diun.watch_repo: "true"
        diun.include_tags: "^\\d+\\.\\d+\\.\\d+$"
      labels:
        app.kubernetes.io/name: diun
        app.kubernetes.io/part-of: diun
        app.kubernetes.io/version: 4.21.0

    spec:
      serviceAccountName: diun

      terminationGracePeriodSeconds: 60

      volumes:
        - name: config
          configMap:
            name: diun-config

      containers:
        - name: diun

          image: crazymax/diun:4.21.0
          args:
            - serve

          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /tmp/images.yaml
              subPath: images.yaml

          env:
            - name: DIUN_WATCH_WORKERS
              value: "3"
            - name: DIUN_WATCH_SCHEDULE
              value: "*/15 * * * *"
            - name: DIUN_PROVIDERS_KUBERNETES
              value: "true"
            - name: DIUN_PROVIDERS_FILE_FILENAME
              value: /tmp/images.yaml
            - name: DIUN_REGOPTS_DOCKERIO_NAME
              value: docker.io
          envFrom:
            - secretRef:
                name: diun-env

          resources:
            requests:
              cpu: 128m
              memory: 256Mi
            limits:
              cpu: 256m
              memory: 384Mi

  volumeClaimTemplates:
    - metadata:
        name: data
        namespace: diun

      spec:
        accessModes:
          - ReadWriteOnce
        volumeMode: Filesystem
        resources:
          requests:
            storage: 512Mi
