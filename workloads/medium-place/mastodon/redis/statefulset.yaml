apiVersion: apps/v1
kind: StatefulSet

metadata:
  name: mastodon-redis
  namespace: medium-place
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/part-of: mastodon
    app.kubernetes.io/version: 7.0.4

spec:
  replicas: 1
  revisionHistoryLimit: 5

  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/part-of: mastodon

  template:
    metadata:
      annotations:
        backup.velero.io/backup-volumes: data
        diun.enable: "true"
        diun.regopt: docker.io
        diun.watch_repo: "true"
        diun.include_tags: "^\\d+\\.\\d+\\.\\d+$"
        diun.sort_tags: "semver"
      labels:
        app.kubernetes.io/name: redis
        app.kubernetes.io/part-of: mastodon
        app.kubernetes.io/version: 7.0.4

    spec:
      terminationGracePeriodSeconds: 60

      securityContext:
        fsGroup: 1001

      containers:
        - name: redis

          imagePullPolicy: Always
          image: bitnami/redis:7.0.4

          volumeMounts:
            - name: data
              mountPath: /bitnami/redis/data

          envFrom:
            - secretRef:
                name: mastodon-redis-env

          ports:
            - name: redis
              protocol: TCP
              containerPort: 6379

  volumeClaimTemplates:
    - metadata:
        name: data
        namespace: medium-place

      spec:
        accessModes:
          - ReadWriteOnce
        volumeMode: Filesystem
        resources:
          requests:
            storage: 1Gi
