apiVersion: apps/v1
kind: Deployment

metadata:
  name: mastodon
  namespace: medium-place
  labels:
    app.kubernetes.io/name: mastodon
    app.kubernetes.io/part-of: mastodon
    app.kubernetes.io/version: 4.0.0

spec:
  replicas: 1
  revisionHistoryLimit: 5

  selector:
    matchLabels:
      app.kubernetes.io/name: mastodon
      app.kubernetes.io/part-of: mastodon

  template:
    metadata:
      labels:
        app.kubernetes.io/name: mastodon
        app.kubernetes.io/part-of: mastodon
        app.kubernetes.io/version: 4.0.0

    spec:
      terminationGracePeriodSeconds: 60

      initContainers:
        - name: migrations
          image: tootsuite/mastodon:v4.0.0rc3
          command:
            - bundle
            - exec
            - rails db:migrate

          envFrom:
            - secretRef:
                name: mastodon-env

      volumes:
        - name: web-tmp
          emptyDir: {}

      containers:
        - name: web
          image: tootsuite/mastodon:v4.0.0rc3
          command:
            - bundle
            - exec
            - rails s -p 3000

          volumeMounts:
            - name: web-tmp
              mountPath: /opt/mastodon/tmp

          envFrom:
            - secretRef:
                name: mastodon-env

          ports:
            - name: http
              protocol: TCP
              containerPort: 3000

        - name: streaming
          image: tootsuite/mastodon:v4.0.0rc3
          command:
            - node
            - ./streaming

          envFrom:
            - secretRef:
                name: mastodon-env

          ports:
            - name: http-ws
              protocol: TCP
              containerPort: 4000

        - name: sidekiq
          image: tootsuite/mastodon:v4.0.0rc3
          command:
            - bundle
            - exec
            - sidekiq

          envFrom:
            - secretRef:
                name: mastodon-env
