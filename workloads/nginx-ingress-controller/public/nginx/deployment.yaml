apiVersion: apps/v1
kind: Deployment

metadata:
  name: nginx
  namespace: nginx-ingress-controller
  labels:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/part-of: nginx-ingress-controller
    app.kubernetes.io/version: 1.23.1

spec:
  replicas: 2
  revisionHistoryLimit: 5

  selector:
    matchLabels:
      app.kubernetes.io/name: nginx
      app.kubernetes.io/part-of: nginx-ingress-controller

  template:
    metadata:
      labels:
        app.kubernetes.io/name: nginx
        app.kubernetes.io/part-of: nginx-ingress-controller
        app.kubernetes.io/version: 1.23.1

    spec:
      terminationGracePeriodSeconds: 60

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - nginx

      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: nginx.conf
                path: nginx.conf

      containers:
        - name: nginx

          imagePullPolicy: Always
          image: bitnami/nginx:1.23.1

          volumeMounts:
            - name: nginx-config
              mountPath: /opt/bitnami/nginx/conf/bitnami/
              readOnly: true

          ports:
            - name: http
              protocol: TCP
              containerPort: 8080

          livenessProbe:
            httpGet:
              scheme: HTTP
              port: http
              path: /healthz
            initialDelaySeconds: 30
          readinessProbe:
            httpGet:
              scheme: HTTP
              port: http
              path: /healthz
            initialDelaySeconds: 30
