apiVersion: apps/v1
kind: Deployment

metadata:
  name: nginx-ingress-controller-private
  namespace: nginx-ingress-controller
  labels:
    app.kubernetes.io/name: nginx-ingress-controller-private
    app.kubernetes.io/part-of: nginx-ingress-controller
    app.kubernetes.io/version: 1.3.1

spec:
  replicas: 1
  revisionHistoryLimit: 5

  selector:
    matchLabels:
      app.kubernetes.io/name: nginx-ingress-controller-private
      app.kubernetes.io/part-of: nginx-ingress-controller

  template:
    metadata:
      annotations:
        diun.enable: "true"
        diun.regopt: docker.io
        diun.watch_repo: "true"
        diun.include_tags: "^\\d+\\.\\d+\\.\\d+$"
        diun.sort_tags: "semver"
      labels:
        app.kubernetes.io/name: nginx-ingress-controller-private
        app.kubernetes.io/part-of: nginx-ingress-controller
        app.kubernetes.io/version: 1.3.1

    spec:
      serviceAccountName: nginx-ingress-controller

      terminationGracePeriodSeconds: 60

      dnsPolicy: ClusterFirst

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - nginx-ingress-controller

      containers:
        - name: nginx-ingress-controller

          imagePullPolicy: Always
          image: bitnami/nginx-ingress-controller:1.3.0-debian-11-r10
          args:
            - /nginx-ingress-controller
            - --default-backend-service=nginx-ingress-controller/nginx-private
            - --publish-service=nginx-ingress-controller/nginx-ingress-controller-private
            - --election-id=ingress-controller-leader
            - --controller-class=k8s.io/ingress-nginx-private

          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace

          ports:
            - name: http
              protocol: TCP
              containerPort: 80
            - name: https
              protocol: TCP
              containerPort: 443

          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /healthz
              port: 10254
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /healthz
              port: 10254
