apiVersion: apps/v1
kind: Deployment

metadata:
  name: caddy-ingress-controller
  namespace: caddy-ingress-controller
  labels:
    app.kubernetes.io/name: caddy-ingress-controller
    app.kubernetes.io/part-of: caddy-ingress-controller
    app.kubernetes.io/version: 0.1.3

spec:
  replicas: 2

  selector:
    matchLabels:
      app.kubernetes.io/name: caddy-ingress-controller
      app.kubernetes.io/part-of: caddy-ingress-controller

  template:
    metadata:
      labels:
        app.kubernetes.io/name: caddy-ingress-controller
        app.kubernetes.io/instance: caddy-ingress-controller
        app.kubernetes.io/version: 0.1.3

    spec:
      serviceAccountName: caddy-ingress-controller

      volumes:
      - name: tmp
        emptyDir: {}

      containers:
        - name: caddy-ingress-controller

          image: caddy/ingress:v0.1.3
          args:
            - -config-map=caddy-ingress-controller-configmap
            - -class-name=caddy

          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            runAsGroup: 0
            runAsUser: 0

          volumeMounts:
          - name: tmp
            mountPath: /tmp

            env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace

            ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
